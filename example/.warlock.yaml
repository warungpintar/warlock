rest:
  # mockTools -> Origin -> Responses -> field(transform) -> app client
  #
  sources:
    - name: Poke API
      origin: https://pokeapi.co
      transforms:
        # (origin) => transform by field(faker) => new Responses(origin+faker_field)
        /api/v2/pokemon:
          get:
            - field: root.results.[0].name
              resolvers:
                - faker: name.firstName
            - field: root.results.[1].name
              resolvers:
                - faker: git.commitSha
            - field: root.results.[2].name
              resolvers:
                - faker: lorem.paragraphs
            - field: root.results.[3].name
              resolvers:
                - path: ./resolvers/result-resolvers.js
        /api/v3/pokemon:
          get:
            - field: 'root'
              resolvers:
                - json: ./resolvers/pokemonv3.json
    - name: Wiki API
      origin: https://wikimedia.org
      transforms:
        /api/rest_v1/feed/availability:
          get:
            - field: 'picture_of_the_day'
              type: string
              resolvers:
                - path: ./resolvers/result-resolvers.js
graphql:
  sources:
    - name: UploadFiles
      handler:
        graphql:
          endpoint: http://localhost:3001/graphql
          multipart: true
    - name: ResizeImages
      handler:
        graphql:
          endpoint: http://localhost:3002/graphql
  additionalTypeDefs: |
    extend type File {
      thumbnailImage(width: Int, height: Int): String
    }
  additionalResolvers:
    - type: File
      field: thumbnailImage
      requiredSelectionSet: '{ base64 }'
      targetSource: ResizeImages
      targetMethod: resizeImage
      args:
        image: '{root.base64}'
        width: '{args.width}'
        height: '{args.height}'
